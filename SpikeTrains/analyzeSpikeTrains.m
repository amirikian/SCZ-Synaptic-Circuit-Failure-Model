%   Using previously generated spike trains from the "Simulations" subdirectory, 
%   this code reproduces panels A1, B1, A2, B2 in Fig.3 and plots 
%   corresponding spike correlation functions as those in Fig.4. 
%   
%   The spike trains are generated in simulations of network dynamics 
%   implemented in simulateSpikingNtwrk.m

clear

[rEA, rEG, rEN, xEA, rIA, rIG, rIN, xIA] = deal(1,2,3,4,5,6,7,8);
E = 1; I = 2;

% Load spike trains generated by simulateSpikingNtwrk.m
inpFilePath = fullfile(pwd, 'SpikingNetworks', 'Simulations');

% fileName = 'simulSteadyNetwrk_Fig3A1.mat';
% fileName = 'simulSteadyNetwrk_Fig3B1.mat';
% fileName = 'simulCritclNetwrk_Fig3A2.mat';
fileName = 'simulCritclNetwrk_Fig3B2.mat';
inpFilePath = fullfile(inpFilePath, fileName);
load(inpFilePath);

fprintf('%s\n', fileName);

tbin = 1;   % ms
t = sp.tTrlON:tbin:sp.tTrlOFF;  % ms
n = sp.nE+sp.nI;

ens = {sp.ensmE; sp.ensmI};

cellactv = histc(allSpkTimes, t);
cellactv(length(t)-1,:) = cellactv(length(t)-1,:) + cellactv(length(t),:);
cellactv(length(t),:) = [];
ensactv = zeros(length(t)-1,length(ens));
for i = 1:length(ens)
    cells = ens{i};
    spks = allSpkTimes(:, cells);
    ensactv(:,i) = histcounts(spks, t)/length(cells)/tbin*1e3;
end
t(end) = [];

t1 = 500;   % ms
t2 = 2900;
it1 = round(t1/tbin)+1;
it2 = round(t2/tbin);
spks = allSpkTimes;
spks(allSpkTimes<t1 | allSpkTimes>t2) = NaN;

spksPerCell = sum(isfinite(spks));

nuens(E) = mean(ensactv(it1:it2,E));
nuens(I) = mean(ensactv(it1:it2,I));
fprintf('rE = %.1f Hz,   rI = %.1f Hz\n', nuens(E), nuens(I));

shft = 4;
ii = 1;

% Plot sorted spike rastergrams 
spks = num2cell(spks,1).';
for i = 1:n
    spks{i} = spks{i}(isfinite(spks{i}));
end
spks = [spks,num2cell(spksPerCell)'];
spksE = spks(sp.ensmE,:);
spksI = spks(sp.ensmI,:);
spkRstrsE = sortrows(spksE,2,'descend');
spkRstrsI = sortrows(spksI,2,'descend');

figure(shft+ii);clf;set(gcf,'windowstyle','docked')
subplot(2,1,1);
nRstrsE = 200;
nRstrsI = 50;
idx  = 1:floor(sp.nE/nRstrsE):sp.nE;
nRstrsE = length(idx);
for i = 1:nRstrsE
    x = spkRstrsE{idx(i),1};
    y = (nRstrsE-i+1)*ones(spkRstrsE{idx(i),2},1);
    scatter(x,y,15,'k','.')
    hold on
end
idx  = 1:floor(sp.nI/nRstrsI):sp.nI;
nRstrsI = length(idx);
for i = 1:nRstrsI
    x = spkRstrsI{idx(i),1};
    y = -i*ones(spkRstrsI{idx(i),2},1);
    scatter(x,y,15,'g','.')
    hold on
end
ylim([-nRstrsI,nRstrsE])
xlim([2000,2200])
ax = gca;
ax.YTickLabel = [];
ax.XTickLabel = [];
ax.Box= 'on';


% Plot population spiking activity
wndw = 1/tbin;      % units of tbin
subplot(2,1,2);
plot(t(it1:it2), movmean(ensactv(it1:it2,E),wndw),'k')
hold on
plot(t(it1:it2), movmean(ensactv(it1:it2,I),wndw),'g')
xlabel('Time, 50 ms/div')
ylabel('Spike Rate, Hz')
xlim([2000,2200])
ylim([0,90])
ax = gca;
ax.YTick = [0 40 80];
ax.YTickLabel = [];
ax.YTickLabelRotation = 90;
ax.XTickLabel = [];
ii = ii+1;


% Compute population average spike correlation
maxlagtime = 30;    % ms   
maxlag = round(maxlagtime/tbin);    % units  of tbin

nucell = mean(cellactv(it1:it2,:));
zz = nucell.'*nucell;
zz = zz - diag(diag(zz));
z = sum(zz(ens{E},ens{E}),'all');
ac = zeros(2*maxlag+1,1);
for i = 1:sp.nE
    ac = ac + xcorr(cellactv(it1:it2,i), maxlag, 'unbiased');
end
c2 = (xcorr(ensactv(it1:it2,E)*sp.nE*tbin*1e-3, maxlag, 'unbiased') - ac)/z - 1;

% Plot correlation function of population spike activity
lag = (-maxlag:+maxlag)*tbin;
figure(shft+ii);clf;set(gcf,'windowstyle','docked')
plot(lag, c2, 'k')
ax = gca;
ax.XTick = [-20 0 20];
ax.YTick = [-0.04 0.00 0.04, 0.08, 0.12];
ax.PlotBoxAspectRatio = [3 2.5 1];
xlabel('Time Lag, ms')
ylabel('Spike Correlation')
ylim([-0.05, 0.125])
ylim([-0.06, 0.13])
xlim([-30, 30])